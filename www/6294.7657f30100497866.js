"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[6294],{6294:(k,h,r)=>{r.r(h),r.d(h,{FirebaseAppCheckWeb:()=>l});var a=r(467),d=r(5083),o=r(2214),i=r(2246);let l=(()=>{class n extends d.E_{get appCheckInstance(){return this._appCheckInstance}set appCheckInstance(e){this._appCheckInstance=e,e?this.registerOnTokenChangedListener():this.unregisterOnTokenChangedListener()}getToken(e){var t=this;return(0,a.A)(function*(){if(!t.appCheckInstance)throw new Error(n.errorNotInitialized);return{token:(yield(0,i.getToken)(t.appCheckInstance,null==e?void 0:e.forceRefresh)).token}})()}initialize(e){var t=this;return(0,a.A)(function*(){null!=e&&e.debugToken?self.FIREBASE_APPCHECK_DEBUG_TOKEN=e.debugToken:null!=e&&e.debug&&(self.FIREBASE_APPCHECK_DEBUG_TOKEN=!0);let s=null==e?void 0:e.provider;if(!s){if(null==e||!e.siteKey)throw new Error(n.errorSiteKeyMissing);const{ReCaptchaV3Provider:C}=yield Promise.resolve().then(r.bind(r,2246));s=new C(null==e?void 0:e.siteKey)}const c=(0,o.Sx)();t.appCheckInstance=(0,i.initializeAppCheck)(c,{provider:s,isTokenAutoRefreshEnabled:null==e?void 0:e.isTokenAutoRefreshEnabled})})()}setTokenAutoRefreshEnabled(e){var t=this;return(0,a.A)(function*(){if(!t.appCheckInstance)throw new Error(n.errorNotInitialized);(0,i.setTokenAutoRefreshEnabled)(t.appCheckInstance,e.enabled)})()}registerOnTokenChangedListener(){this.appCheckInstance&&(this.onTokenChangedListenerUnsubscribe=(0,i.onTokenChanged)(this.appCheckInstance,e=>this.handleTokenChanged(e.token)))}unregisterOnTokenChangedListener(){this.onTokenChangedListenerUnsubscribe&&this.onTokenChangedListenerUnsubscribe()}handleTokenChanged(e){this.notifyListeners(n.tokenChangedEvent,{token:e})}}return n.tokenChangedEvent="tokenChanged",n.errorNotInitialized="AppCheck has not been initialized.",n.errorSiteKeyMissing="siteKey must be provided.",n})()}}]);